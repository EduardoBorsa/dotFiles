# Some informations about flags
# The -n means that I don't need the prefix 
# the -g id global which mean it will happened in all shit

set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs" 

# change the prefix to Ctrl s
set -g prefix C-s

# unset the prefix of Ctrl b
unbind C-b
set -sg escape-time 1
set -g base-index 1
set -g renumber-windows on
setw -g pane-base-index 1

#Reload file with prefix r and print reload
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#send the prefix
bind-key -r C-s send-prefix

# Split windows 
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

#Select panes with  hjkl
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# Not sure, check
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

#Something Related to color
set -g status-style fg=white,bg=black
set -g window-status-current-style fg=white,bold,bg=yellow
setw -g pane-border-style fg=green,bg=black
setw -g pane-active-border-style fg=white,bg=yellow
set -g message-style fg=white,bold,bg=black

set-option -g status-left-length 50
set -g status-right " #P "

#new windows
bind c new-window -c "#{pane_current_path}"



# Something related to the visualmode
setw -g mode-keys vi
bind Escape copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
unbind p
bind p paste-buffer

#break pane to new window
bind-key b break-pane -d

#Enter choose tree for change sessions
bind-key C-j choose-tree

bind -t vi-copy y copy-pipe "xclip -sel clip -i"

bind t split-window -h -c ~/ "vim todoFile"
bind C-t split-window -h -c ~/ "vim vimNiceComands"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key C-b send-keys '~/tat.sh && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
